spring.application.name=ORDER-SERVICE

server.port=9090
#spring.h2.console.enabled=true
spring.h2.console.enabled=false

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultzone=http://localhost:8761/eureka/

eureka.instance.hostname=localhost

#url.locator=http://localhost:9091
product.url.locator=http://PRODUCT-SERVICE
app.name=OrderServiceApp

#spring.profiles.active=dev
spring.profiles.active=local



## ----------- Logging Attributes -----------
#logging.config=logback.xml
#logging.config=logback-spring.xml
#logging.config=classpath:logback-spring.xml

spring.main.banner-mode=off
spring.output.ansi.enabled=ALWAYS

#logging.level.root=WARN
#logging.level.root=INFO
logging.level.root=DEBUG
#logging.level.root=TRACE

#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate=ERROR
logging.level.com.examplespring.orderservice.api=DEBUG

# output to a temp_folder/file
#logging.file=${java.io.tmpdir}/application.log

# Logging pattern for the console
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %m%n
#logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(-%5p) %clr(%logger{0}){blue} %clr(%m){faint}%n
#logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# Logging pattern for file
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{0} - %m%n
#logging.pattern.file= %d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}




## ----------- Database Connectivity -----------
# Set DataSource configurations for the database connection
#spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.url = jdbc:postgresql://localhost:5432/mypsqldb
spring.datasource.username = postgres
spring.datasource.password = admin123
spring.datasource.driver-class-name = org.postgresql.Driver

# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.auto_quote_keyword=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.show_sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = none
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
